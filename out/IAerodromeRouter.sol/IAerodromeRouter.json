{"abi":[{"type":"function","name":"ETHER","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"UNSAFE_swapExactTokensForTokens","inputs":[{"name":"amounts","type":"uint256[]","internalType":"uint256[]"},{"name":"routes","type":"tuple[]","internalType":"struct IAerodromeRouter.Route[]","components":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"stable","type":"bool","internalType":"bool"},{"name":"factory","type":"address","internalType":"address"}]},{"name":"to","type":"address","internalType":"address"},{"name":"deadline","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"addLiquidity","inputs":[{"name":"tokenA","type":"address","internalType":"address"},{"name":"tokenB","type":"address","internalType":"address"},{"name":"stable","type":"bool","internalType":"bool"},{"name":"amountADesired","type":"uint256","internalType":"uint256"},{"name":"amountBDesired","type":"uint256","internalType":"uint256"},{"name":"amountAMin","type":"uint256","internalType":"uint256"},{"name":"amountBMin","type":"uint256","internalType":"uint256"},{"name":"to","type":"address","internalType":"address"},{"name":"deadline","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"amountA","type":"uint256","internalType":"uint256"},{"name":"amountB","type":"uint256","internalType":"uint256"},{"name":"liquidity","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"addLiquidityETH","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"stable","type":"bool","internalType":"bool"},{"name":"amountTokenDesired","type":"uint256","internalType":"uint256"},{"name":"amountTokenMin","type":"uint256","internalType":"uint256"},{"name":"amountETHMin","type":"uint256","internalType":"uint256"},{"name":"to","type":"address","internalType":"address"},{"name":"deadline","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"amountToken","type":"uint256","internalType":"uint256"},{"name":"amountETH","type":"uint256","internalType":"uint256"},{"name":"liquidity","type":"uint256","internalType":"uint256"}],"stateMutability":"payable"},{"type":"function","name":"defaultFactory","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"factoryRegistry","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"generateZapInParams","inputs":[{"name":"tokenA","type":"address","internalType":"address"},{"name":"tokenB","type":"address","internalType":"address"},{"name":"stable","type":"bool","internalType":"bool"},{"name":"_factory","type":"address","internalType":"address"},{"name":"amountInA","type":"uint256","internalType":"uint256"},{"name":"amountInB","type":"uint256","internalType":"uint256"},{"name":"routesA","type":"tuple[]","internalType":"struct IAerodromeRouter.Route[]","components":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"stable","type":"bool","internalType":"bool"},{"name":"factory","type":"address","internalType":"address"}]},{"name":"routesB","type":"tuple[]","internalType":"struct IAerodromeRouter.Route[]","components":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"stable","type":"bool","internalType":"bool"},{"name":"factory","type":"address","internalType":"address"}]}],"outputs":[{"name":"amountOutMinA","type":"uint256","internalType":"uint256"},{"name":"amountOutMinB","type":"uint256","internalType":"uint256"},{"name":"amountAMin","type":"uint256","internalType":"uint256"},{"name":"amountBMin","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"generateZapOutParams","inputs":[{"name":"tokenA","type":"address","internalType":"address"},{"name":"tokenB","type":"address","internalType":"address"},{"name":"stable","type":"bool","internalType":"bool"},{"name":"_factory","type":"address","internalType":"address"},{"name":"liquidity","type":"uint256","internalType":"uint256"},{"name":"routesA","type":"tuple[]","internalType":"struct IAerodromeRouter.Route[]","components":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"stable","type":"bool","internalType":"bool"},{"name":"factory","type":"address","internalType":"address"}]},{"name":"routesB","type":"tuple[]","internalType":"struct IAerodromeRouter.Route[]","components":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"stable","type":"bool","internalType":"bool"},{"name":"factory","type":"address","internalType":"address"}]}],"outputs":[{"name":"amountOutMinA","type":"uint256","internalType":"uint256"},{"name":"amountOutMinB","type":"uint256","internalType":"uint256"},{"name":"amountAMin","type":"uint256","internalType":"uint256"},{"name":"amountBMin","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getAmountsOut","inputs":[{"name":"amountIn","type":"uint256","internalType":"uint256"},{"name":"routes","type":"tuple[]","internalType":"struct IAerodromeRouter.Route[]","components":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"stable","type":"bool","internalType":"bool"},{"name":"factory","type":"address","internalType":"address"}]}],"outputs":[{"name":"amounts","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"getReserves","inputs":[{"name":"tokenA","type":"address","internalType":"address"},{"name":"tokenB","type":"address","internalType":"address"},{"name":"stable","type":"bool","internalType":"bool"},{"name":"_factory","type":"address","internalType":"address"}],"outputs":[{"name":"reserveA","type":"uint256","internalType":"uint256"},{"name":"reserveB","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"poolFor","inputs":[{"name":"tokenA","type":"address","internalType":"address"},{"name":"tokenB","type":"address","internalType":"address"},{"name":"stable","type":"bool","internalType":"bool"},{"name":"_factory","type":"address","internalType":"address"}],"outputs":[{"name":"pool","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"quoteAddLiquidity","inputs":[{"name":"tokenA","type":"address","internalType":"address"},{"name":"tokenB","type":"address","internalType":"address"},{"name":"stable","type":"bool","internalType":"bool"},{"name":"_factory","type":"address","internalType":"address"},{"name":"amountADesired","type":"uint256","internalType":"uint256"},{"name":"amountBDesired","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"amountA","type":"uint256","internalType":"uint256"},{"name":"amountB","type":"uint256","internalType":"uint256"},{"name":"liquidity","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"quoteRemoveLiquidity","inputs":[{"name":"tokenA","type":"address","internalType":"address"},{"name":"tokenB","type":"address","internalType":"address"},{"name":"stable","type":"bool","internalType":"bool"},{"name":"_factory","type":"address","internalType":"address"},{"name":"liquidity","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"amountA","type":"uint256","internalType":"uint256"},{"name":"amountB","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"quoteStableLiquidityRatio","inputs":[{"name":"tokenA","type":"address","internalType":"address"},{"name":"tokenB","type":"address","internalType":"address"},{"name":"factory","type":"address","internalType":"address"}],"outputs":[{"name":"ratio","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"removeLiquidity","inputs":[{"name":"tokenA","type":"address","internalType":"address"},{"name":"tokenB","type":"address","internalType":"address"},{"name":"stable","type":"bool","internalType":"bool"},{"name":"liquidity","type":"uint256","internalType":"uint256"},{"name":"amountAMin","type":"uint256","internalType":"uint256"},{"name":"amountBMin","type":"uint256","internalType":"uint256"},{"name":"to","type":"address","internalType":"address"},{"name":"deadline","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"amountA","type":"uint256","internalType":"uint256"},{"name":"amountB","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"removeLiquidityETH","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"stable","type":"bool","internalType":"bool"},{"name":"liquidity","type":"uint256","internalType":"uint256"},{"name":"amountTokenMin","type":"uint256","internalType":"uint256"},{"name":"amountETHMin","type":"uint256","internalType":"uint256"},{"name":"to","type":"address","internalType":"address"},{"name":"deadline","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"amountToken","type":"uint256","internalType":"uint256"},{"name":"amountETH","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"removeLiquidityETHSupportingFeeOnTransferTokens","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"stable","type":"bool","internalType":"bool"},{"name":"liquidity","type":"uint256","internalType":"uint256"},{"name":"amountTokenMin","type":"uint256","internalType":"uint256"},{"name":"amountETHMin","type":"uint256","internalType":"uint256"},{"name":"to","type":"address","internalType":"address"},{"name":"deadline","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"amountETH","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"sortTokens","inputs":[{"name":"tokenA","type":"address","internalType":"address"},{"name":"tokenB","type":"address","internalType":"address"}],"outputs":[{"name":"token0","type":"address","internalType":"address"},{"name":"token1","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"swapExactETHForTokens","inputs":[{"name":"amountOutMin","type":"uint256","internalType":"uint256"},{"name":"routes","type":"tuple[]","internalType":"struct IAerodromeRouter.Route[]","components":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"stable","type":"bool","internalType":"bool"},{"name":"factory","type":"address","internalType":"address"}]},{"name":"to","type":"address","internalType":"address"},{"name":"deadline","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"amounts","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"payable"},{"type":"function","name":"swapExactETHForTokensSupportingFeeOnTransferTokens","inputs":[{"name":"amountOutMin","type":"uint256","internalType":"uint256"},{"name":"routes","type":"tuple[]","internalType":"struct IAerodromeRouter.Route[]","components":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"stable","type":"bool","internalType":"bool"},{"name":"factory","type":"address","internalType":"address"}]},{"name":"to","type":"address","internalType":"address"},{"name":"deadline","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"swapExactTokensForETH","inputs":[{"name":"amountIn","type":"uint256","internalType":"uint256"},{"name":"amountOutMin","type":"uint256","internalType":"uint256"},{"name":"routes","type":"tuple[]","internalType":"struct IAerodromeRouter.Route[]","components":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"stable","type":"bool","internalType":"bool"},{"name":"factory","type":"address","internalType":"address"}]},{"name":"to","type":"address","internalType":"address"},{"name":"deadline","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"amounts","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"swapExactTokensForETHSupportingFeeOnTransferTokens","inputs":[{"name":"amountIn","type":"uint256","internalType":"uint256"},{"name":"amountOutMin","type":"uint256","internalType":"uint256"},{"name":"routes","type":"tuple[]","internalType":"struct IAerodromeRouter.Route[]","components":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"stable","type":"bool","internalType":"bool"},{"name":"factory","type":"address","internalType":"address"}]},{"name":"to","type":"address","internalType":"address"},{"name":"deadline","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"swapExactTokensForTokens","inputs":[{"name":"amountIn","type":"uint256","internalType":"uint256"},{"name":"amountOutMin","type":"uint256","internalType":"uint256"},{"name":"routes","type":"tuple[]","internalType":"struct IAerodromeRouter.Route[]","components":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"stable","type":"bool","internalType":"bool"},{"name":"factory","type":"address","internalType":"address"}]},{"name":"to","type":"address","internalType":"address"},{"name":"deadline","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"amounts","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"swapExactTokensForTokensSupportingFeeOnTransferTokens","inputs":[{"name":"amountIn","type":"uint256","internalType":"uint256"},{"name":"amountOutMin","type":"uint256","internalType":"uint256"},{"name":"routes","type":"tuple[]","internalType":"struct IAerodromeRouter.Route[]","components":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"stable","type":"bool","internalType":"bool"},{"name":"factory","type":"address","internalType":"address"}]},{"name":"to","type":"address","internalType":"address"},{"name":"deadline","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"voter","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"weth","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IWETH"}],"stateMutability":"view"},{"type":"function","name":"zapIn","inputs":[{"name":"tokenIn","type":"address","internalType":"address"},{"name":"amountInA","type":"uint256","internalType":"uint256"},{"name":"amountInB","type":"uint256","internalType":"uint256"},{"name":"zapInPool","type":"tuple","internalType":"struct IAerodromeRouter.Zap","components":[{"name":"tokenA","type":"address","internalType":"address"},{"name":"tokenB","type":"address","internalType":"address"},{"name":"stable","type":"bool","internalType":"bool"},{"name":"factory","type":"address","internalType":"address"},{"name":"amountOutMinA","type":"uint256","internalType":"uint256"},{"name":"amountOutMinB","type":"uint256","internalType":"uint256"},{"name":"amountAMin","type":"uint256","internalType":"uint256"},{"name":"amountBMin","type":"uint256","internalType":"uint256"}]},{"name":"routesA","type":"tuple[]","internalType":"struct IAerodromeRouter.Route[]","components":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"stable","type":"bool","internalType":"bool"},{"name":"factory","type":"address","internalType":"address"}]},{"name":"routesB","type":"tuple[]","internalType":"struct IAerodromeRouter.Route[]","components":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"stable","type":"bool","internalType":"bool"},{"name":"factory","type":"address","internalType":"address"}]},{"name":"to","type":"address","internalType":"address"},{"name":"stake","type":"bool","internalType":"bool"}],"outputs":[{"name":"liquidity","type":"uint256","internalType":"uint256"}],"stateMutability":"payable"},{"type":"function","name":"zapOut","inputs":[{"name":"tokenOut","type":"address","internalType":"address"},{"name":"liquidity","type":"uint256","internalType":"uint256"},{"name":"zapOutPool","type":"tuple","internalType":"struct IAerodromeRouter.Zap","components":[{"name":"tokenA","type":"address","internalType":"address"},{"name":"tokenB","type":"address","internalType":"address"},{"name":"stable","type":"bool","internalType":"bool"},{"name":"factory","type":"address","internalType":"address"},{"name":"amountOutMinA","type":"uint256","internalType":"uint256"},{"name":"amountOutMinB","type":"uint256","internalType":"uint256"},{"name":"amountAMin","type":"uint256","internalType":"uint256"},{"name":"amountBMin","type":"uint256","internalType":"uint256"}]},{"name":"routesA","type":"tuple[]","internalType":"struct IAerodromeRouter.Route[]","components":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"stable","type":"bool","internalType":"bool"},{"name":"factory","type":"address","internalType":"address"}]},{"name":"routesB","type":"tuple[]","internalType":"struct IAerodromeRouter.Route[]","components":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"stable","type":"bool","internalType":"bool"},{"name":"factory","type":"address","internalType":"address"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"error","name":"ETHTransferFailed","inputs":[]},{"type":"error","name":"Expired","inputs":[]},{"type":"error","name":"InsufficientAmount","inputs":[]},{"type":"error","name":"InsufficientAmountA","inputs":[]},{"type":"error","name":"InsufficientAmountADesired","inputs":[]},{"type":"error","name":"InsufficientAmountAOptimal","inputs":[]},{"type":"error","name":"InsufficientAmountB","inputs":[]},{"type":"error","name":"InsufficientAmountBDesired","inputs":[]},{"type":"error","name":"InsufficientLiquidity","inputs":[]},{"type":"error","name":"InsufficientOutputAmount","inputs":[]},{"type":"error","name":"InvalidAmountInForETHDeposit","inputs":[]},{"type":"error","name":"InvalidPath","inputs":[]},{"type":"error","name":"InvalidRouteA","inputs":[]},{"type":"error","name":"InvalidRouteB","inputs":[]},{"type":"error","name":"InvalidTokenInForETHDeposit","inputs":[]},{"type":"error","name":"OnlyWETH","inputs":[]},{"type":"error","name":"PoolDoesNotExist","inputs":[]},{"type":"error","name":"PoolFactoryDoesNotExist","inputs":[]},{"type":"error","name":"SameAddresses","inputs":[]},{"type":"error","name":"ZeroAddress","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"ETHER()":"42cb1fbc","UNSAFE_swapExactTokensForTokens(uint256[],(address,address,bool,address)[],address,uint256)":"4111d597","addLiquidity(address,address,bool,uint256,uint256,uint256,uint256,address,uint256)":"5a47ddc3","addLiquidityETH(address,bool,uint256,uint256,uint256,address,uint256)":"b7e0d4c0","defaultFactory()":"d4b6846d","factoryRegistry()":"3bf0c9fb","generateZapInParams(address,address,bool,address,uint256,uint256,(address,address,bool,address)[],(address,address,bool,address)[])":"07db50fa","generateZapOutParams(address,address,bool,address,uint256,(address,address,bool,address)[],(address,address,bool,address)[])":"7539d413","getAmountsOut(uint256,(address,address,bool,address)[])":"5509a1ac","getReserves(address,address,bool,address)":"8c0037dc","poolFor(address,address,bool,address)":"874029d9","quoteAddLiquidity(address,address,bool,address,uint256,uint256)":"ce700c29","quoteRemoveLiquidity(address,address,bool,address,uint256)":"c92de3ec","quoteStableLiquidityRatio(address,address,address)":"f5ba53c7","removeLiquidity(address,address,bool,uint256,uint256,uint256,address,uint256)":"0dede6c4","removeLiquidityETH(address,bool,uint256,uint256,uint256,address,uint256)":"d7b0e0a5","removeLiquidityETHSupportingFeeOnTransferTokens(address,bool,uint256,uint256,uint256,address,uint256)":"fe411f14","sortTokens(address,address)":"544caa56","swapExactETHForTokens(uint256,(address,address,bool,address)[],address,uint256)":"903638a4","swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,(address,address,bool,address)[],address,uint256)":"3da5acba","swapExactTokensForETH(uint256,uint256,(address,address,bool,address)[],address,uint256)":"c6b7f1b6","swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)":"12bc3aca","swapExactTokensForTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)":"cac88ea9","swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)":"88cd821e","voter()":"46c96aac","weth()":"3fc8cef3","zapIn(address,uint256,uint256,(address,address,bool,address,uint256,uint256,uint256,uint256),(address,address,bool,address)[],(address,address,bool,address)[],address,bool)":"fb49bafd","zapOut(address,uint256,(address,address,bool,address,uint256,uint256,uint256,uint256),(address,address,bool,address)[],(address,address,bool,address)[])":"a81b9159"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ETHTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Expired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAmountA\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAmountADesired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAmountAOptimal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAmountB\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAmountBDesired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientLiquidity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientOutputAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmountInForETHDeposit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPath\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRouteA\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRouteB\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenInForETHDeposit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyWETH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolFactoryDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SameAddresses\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ETHER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IAerodromeRouter.Route[]\",\"name\":\"routes\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"UNSAFE_swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factoryRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountInA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInB\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IAerodromeRouter.Route[]\",\"name\":\"routesA\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IAerodromeRouter.Route[]\",\"name\":\"routesB\",\"type\":\"tuple[]\"}],\"name\":\"generateZapInParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMinA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IAerodromeRouter.Route[]\",\"name\":\"routesA\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IAerodromeRouter.Route[]\",\"name\":\"routesB\",\"type\":\"tuple[]\"}],\"name\":\"generateZapOutParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMinA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IAerodromeRouter.Route[]\",\"name\":\"routes\",\"type\":\"tuple[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"poolFor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"}],\"name\":\"quoteAddLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"quoteRemoveLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"name\":\"quoteStableLiquidityRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"sortTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IAerodromeRouter.Route[]\",\"name\":\"routes\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IAerodromeRouter.Route[]\",\"name\":\"routes\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IAerodromeRouter.Route[]\",\"name\":\"routes\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IAerodromeRouter.Route[]\",\"name\":\"routes\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IAerodromeRouter.Route[]\",\"name\":\"routes\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IAerodromeRouter.Route[]\",\"name\":\"routes\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountInA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInB\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"}],\"internalType\":\"struct IAerodromeRouter.Zap\",\"name\":\"zapInPool\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IAerodromeRouter.Route[]\",\"name\":\"routesA\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IAerodromeRouter.Route[]\",\"name\":\"routesB\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stake\",\"type\":\"bool\"}],\"name\":\"zapIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"}],\"internalType\":\"struct IAerodromeRouter.Zap\",\"name\":\"zapOutPool\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IAerodromeRouter.Route[]\",\"name\":\"routesA\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"internalType\":\"struct IAerodromeRouter.Route[]\",\"name\":\"routesB\",\"type\":\"tuple[]\"}],\"name\":\"zapOut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"ETHER()\":{\"details\":\"Represents Ether. Used by zapper to determine whether to return assets as ETH/WETH.\"},\"UNSAFE_swapExactTokensForTokens(uint256[],(address,address,bool,address)[],address,uint256)\":{\"params\":{\"deadline\":\"Deadline to receive tokens\",\"routes\":\"Array of trade routes used in the swap\",\"to\":\"Recipient of the tokens received\"},\"returns\":{\"_0\":\"amounts     Array of amounts to swap  per route\"}},\"addLiquidity(address,address,bool,uint256,uint256,uint256,uint256,address,uint256)\":{\"params\":{\"amountADesired\":\"Amount of tokenA desired to deposit\",\"amountAMin\":\"Minimum amount of tokenA to deposit\",\"amountBDesired\":\"Amount of tokenB desired to deposit\",\"amountBMin\":\"Minimum amount of tokenB to deposit\",\"deadline\":\"Deadline to receive liquidity\",\"stable\":\"True if pool is stable, false if volatile\",\"to\":\"Recipient of liquidity token\",\"tokenA\":\".\",\"tokenB\":\".\"},\"returns\":{\"amountA\":\"        Amount of tokenA to actually deposit\",\"amountB\":\"        Amount of tokenB to actually deposit\",\"liquidity\":\"      Amount of liquidity token returned from deposit\"}},\"addLiquidityETH(address,bool,uint256,uint256,uint256,address,uint256)\":{\"params\":{\"amountETHMin\":\"Minimum amount of ETH to deposit\",\"amountTokenDesired\":\"Amount of token desired to deposit\",\"amountTokenMin\":\"Minimum amount of token to deposit\",\"deadline\":\"Deadline to add liquidity\",\"stable\":\"True if pool is stable, false if volatile\",\"to\":\"Recipient of liquidity token\",\"token\":\".\"},\"returns\":{\"amountETH\":\"          Amount of tokenETH to actually deposit\",\"amountToken\":\"        Amount of token to actually deposit\",\"liquidity\":\"          Amount of liquidity token returned from deposit\"}},\"generateZapInParams(address,address,bool,address,uint256,uint256,(address,address,bool,address)[],(address,address,bool,address)[])\":{\"details\":\"Output token refers to the token you want to zap in from.\",\"params\":{\"_factory\":\".\",\"amountInA\":\"Amount of input token you wish to send down routesA\",\"amountInB\":\"Amount of input token you wish to send down routesB\",\"routesA\":\"Route used to convert input token to tokenA\",\"routesB\":\"Route used to convert input token to tokenB\",\"stable\":\".\",\"tokenA\":\".\",\"tokenB\":\".\"},\"returns\":{\"amountAMin\":\"     Minimum amount of tokenA expected from depositing liquidity.\",\"amountBMin\":\"     Minimum amount of tokenB expected from depositing liquidity.\",\"amountOutMinA\":\"  Minimum output expected from swapping input token to tokenA.\",\"amountOutMinB\":\"  Minimum output expected from swapping input token to tokenB.\"}},\"generateZapOutParams(address,address,bool,address,uint256,(address,address,bool,address)[],(address,address,bool,address)[])\":{\"details\":\"Output token refers to the token you want to zap out of.\",\"params\":{\"_factory\":\".\",\"liquidity\":\"Amount of liquidity being zapped out of into a given output token.\",\"routesA\":\"Route used to convert tokenA into output token.\",\"routesB\":\"Route used to convert tokenB into output token.\",\"stable\":\".\",\"tokenA\":\".\",\"tokenB\":\".\"},\"returns\":{\"amountAMin\":\"     Minimum amount of tokenA expected from withdrawing liquidity.\",\"amountBMin\":\"     Minimum amount of tokenB expected from withdrawing liquidity.\",\"amountOutMinA\":\"  Minimum output expected from swapping tokenA into output token.\",\"amountOutMinB\":\"  Minimum output expected from swapping tokenB into output token.\"}},\"getReserves(address,address,bool,address)\":{\"params\":{\"_factory\":\"Address of PoolFactory for tokenA and tokenB\",\"stable\":\"True if pool is stable, false if volatile\",\"tokenA\":\".\",\"tokenB\":\".\"},\"returns\":{\"reserveA\":\"   Amount of reserves of the sorted token A\",\"reserveB\":\"   Amount of reserves of the sorted token B\"}},\"poolFor(address,address,bool,address)\":{\"details\":\"Returns a randomly generated address for a nonexistent pool\",\"params\":{\"_factory\":\"Address of factory which created the pool\",\"stable\":\"True if pool is stable, false if volatile\",\"tokenA\":\"Address of token to query\",\"tokenB\":\"Address of token to query\"}},\"quoteAddLiquidity(address,address,bool,address,uint256,uint256)\":{\"params\":{\"_factory\":\"Address of PoolFactory for tokenA and tokenB\",\"amountADesired\":\"Amount of tokenA desired to deposit\",\"amountBDesired\":\"Amount of tokenB desired to deposit\",\"stable\":\"True if pool is stable, false if volatile\",\"tokenA\":\".\",\"tokenB\":\".\"},\"returns\":{\"amountA\":\"        Amount of tokenA to actually deposit\",\"amountB\":\"        Amount of tokenB to actually deposit\",\"liquidity\":\"      Amount of liquidity token returned from deposit\"}},\"quoteRemoveLiquidity(address,address,bool,address,uint256)\":{\"params\":{\"_factory\":\"Address of PoolFactory for tokenA and tokenB\",\"liquidity\":\"Amount of liquidity to remove\",\"stable\":\"True if pool is stable, false if volatile\",\"tokenA\":\".\",\"tokenB\":\".\"},\"returns\":{\"amountA\":\"    Amount of tokenA received\",\"amountB\":\"    Amount of tokenB received\"}},\"quoteStableLiquidityRatio(address,address,address)\":{\"details\":\"Returns stable liquidity ratio of B to (A + B).      E.g. if ratio is 0.4, it means there is more of A than there is of B.      Therefore you should deposit more of token A than B.\",\"params\":{\"factory\":\"Factory that created stable pool.\",\"tokenA\":\"tokenA of stable pool you are zapping into.\",\"tokenB\":\"tokenB of stable pool you are zapping into.\"},\"returns\":{\"ratio\":\"  Ratio of token0 to token1 required to deposit into zap.\"}},\"removeLiquidity(address,address,bool,uint256,uint256,uint256,address,uint256)\":{\"params\":{\"amountAMin\":\"Minimum amount of tokenA to receive\",\"amountBMin\":\"Minimum amount of tokenB to receive\",\"deadline\":\"Deadline to remove liquidity\",\"liquidity\":\"Amount of liquidity to remove\",\"stable\":\"True if pool is stable, false if volatile\",\"to\":\"Recipient of tokens received\",\"tokenA\":\".\",\"tokenB\":\".\"},\"returns\":{\"amountA\":\"    Amount of tokenA received\",\"amountB\":\"    Amount of tokenB received\"}},\"removeLiquidityETH(address,bool,uint256,uint256,uint256,address,uint256)\":{\"params\":{\"amountETHMin\":\"Minimum amount of ETH to receive\",\"amountTokenMin\":\"Minimum amount of token to receive\",\"deadline\":\"Deadline to receive liquidity\",\"liquidity\":\"Amount of liquidity to remove\",\"stable\":\"True if pool is stable, false if volatile\",\"to\":\"Recipient of liquidity token\",\"token\":\".\"},\"returns\":{\"amountETH\":\"      Amount of ETH received\",\"amountToken\":\"    Amount of token received\"}},\"removeLiquidityETHSupportingFeeOnTransferTokens(address,bool,uint256,uint256,uint256,address,uint256)\":{\"params\":{\"amountETHMin\":\"Minimum amount of ETH to receive\",\"amountTokenMin\":\"Minimum amount of token to receive\",\"deadline\":\"Deadline to receive liquidity\",\"liquidity\":\"Amount of liquidity to remove\",\"stable\":\"True if pool is stable, false if volatile\",\"to\":\"Recipient of liquidity token\",\"token\":\".\"},\"returns\":{\"amountETH\":\"      Amount of ETH received\"}},\"sortTokens(address,address)\":{\"params\":{\"tokenA\":\"Address of token to sort\",\"tokenB\":\"Address of token to sort\"},\"returns\":{\"token0\":\" Lower address value between tokenA and tokenB\",\"token1\":\" Higher address value between tokenA and tokenB\"}},\"swapExactETHForTokens(uint256,(address,address,bool,address)[],address,uint256)\":{\"params\":{\"amountOutMin\":\"Minimum amount of desired token received\",\"deadline\":\"Deadline to receive tokens\",\"routes\":\"Array of trade routes used in the swap\",\"to\":\"Recipient of the tokens received\"},\"returns\":{\"amounts\":\"    Array of amounts returned per route\"}},\"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,(address,address,bool,address)[],address,uint256)\":{\"params\":{\"amountOutMin\":\"Minimum amount of desired token received\",\"deadline\":\"Deadline to receive tokens\",\"routes\":\"Array of trade routes used in the swap\",\"to\":\"Recipient of the tokens received\"}},\"swapExactTokensForETH(uint256,uint256,(address,address,bool,address)[],address,uint256)\":{\"params\":{\"amountIn\":\"Amount of token in\",\"amountOutMin\":\"Minimum amount of desired ETH\",\"deadline\":\"Deadline to receive tokens\",\"routes\":\"Array of trade routes used in the swap\",\"to\":\"Recipient of the tokens received\"},\"returns\":{\"amounts\":\"    Array of amounts returned per route\"}},\"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)\":{\"params\":{\"amountIn\":\"Amount of token in\",\"amountOutMin\":\"Minimum amount of desired ETH\",\"deadline\":\"Deadline to receive tokens\",\"routes\":\"Array of trade routes used in the swap\",\"to\":\"Recipient of the tokens received\"}},\"swapExactTokensForTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)\":{\"params\":{\"amountIn\":\"Amount of token in\",\"amountOutMin\":\"Minimum amount of desired token received\",\"deadline\":\"Deadline to receive tokens\",\"routes\":\"Array of trade routes used in the swap\",\"to\":\"Recipient of the tokens received\"},\"returns\":{\"amounts\":\"    Array of amounts returned per route\"}},\"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)\":{\"params\":{\"amountIn\":\"Amount of token in\",\"amountOutMin\":\"Minimum amount of desired token received\",\"deadline\":\"Deadline to receive tokens\",\"routes\":\"Array of trade routes used in the swap\",\"to\":\"Recipient of the tokens received\"}},\"zapIn(address,uint256,uint256,(address,address,bool,address,uint256,uint256,uint256,uint256),(address,address,bool,address)[],(address,address,bool,address)[],address,bool)\":{\"params\":{\"amountInA\":\"Amount of input token you wish to send down routesA\",\"amountInB\":\"Amount of input token you wish to send down routesB\",\"routesA\":\"Route used to convert input token to tokenA\",\"routesB\":\"Route used to convert input token to tokenB\",\"stake\":\"Auto-stake liquidity in corresponding gauge.\",\"to\":\"Address you wish to mint liquidity to.\",\"tokenIn\":\"Token you are zapping in from (i.e. input token).\",\"zapInPool\":\"Contains zap struct information. See Zap struct.\"},\"returns\":{\"liquidity\":\"  Amount of LP tokens created from zapping in.\"}},\"zapOut(address,uint256,(address,address,bool,address,uint256,uint256,uint256,uint256),(address,address,bool,address)[],(address,address,bool,address)[])\":{\"params\":{\"liquidity\":\"Amount of liquidity you wish to remove.\",\"routesA\":\"Route used to convert tokenA into output token.\",\"routesB\":\"Route used to convert tokenB into output token.\",\"tokenOut\":\"Token you are zapping out to (i.e. output token).\",\"zapOutPool\":\"Contains zap struct information. See Zap struct.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"UNSAFE_swapExactTokensForTokens(uint256[],(address,address,bool,address)[],address,uint256)\":{\"notice\":\"Swap one token for another without slippage protection\"},\"addLiquidity(address,address,bool,uint256,uint256,uint256,uint256,address,uint256)\":{\"notice\":\"Add liquidity of two tokens to a Pool\"},\"addLiquidityETH(address,bool,uint256,uint256,uint256,address,uint256)\":{\"notice\":\"Add liquidity of a token and WETH (transferred as ETH) to a Pool\"},\"defaultFactory()\":{\"notice\":\"Address of Protocol PoolFactory.sol\"},\"factoryRegistry()\":{\"notice\":\"Address of FactoryRegistry.sol\"},\"generateZapInParams(address,address,bool,address,uint256,uint256,(address,address,bool,address)[],(address,address,bool,address)[])\":{\"notice\":\"Used to generate params required for zapping in.         Zap in => remove liquidity then swap.         Apply slippage to expected swap values to account for changes in reserves in between.\"},\"generateZapOutParams(address,address,bool,address,uint256,(address,address,bool,address)[],(address,address,bool,address)[])\":{\"notice\":\"Used to generate params required for zapping out.         Zap out => swap then add liquidity.         Apply slippage to expected liquidity values to account for changes in reserves in between.\"},\"getAmountsOut(uint256,(address,address,bool,address)[])\":{\"notice\":\"Perform chained getAmountOut calculations on any number of pools\"},\"getReserves(address,address,bool,address)\":{\"notice\":\"Fetch and sort the reserves for a pool\"},\"poolFor(address,address,bool,address)\":{\"notice\":\"Calculate the address of a pool by its' factory.         Used by all Router functions containing a `Route[]` or `_factory` argument.         Reverts if _factory is not approved by the FactoryRegistry\"},\"quoteAddLiquidity(address,address,bool,address,uint256,uint256)\":{\"notice\":\"Quote the amount deposited into a Pool\"},\"quoteRemoveLiquidity(address,address,bool,address,uint256)\":{\"notice\":\"Quote the amount of liquidity removed from a Pool\"},\"quoteStableLiquidityRatio(address,address,address)\":{\"notice\":\"Used by zapper to determine appropriate ratio of A to B to deposit liquidity. Assumes stable pool.\"},\"removeLiquidity(address,address,bool,uint256,uint256,uint256,address,uint256)\":{\"notice\":\"Remove liquidity of two tokens from a Pool\"},\"removeLiquidityETH(address,bool,uint256,uint256,uint256,address,uint256)\":{\"notice\":\"Remove liquidity of a token and WETH (returned as ETH) from a Pool\"},\"removeLiquidityETHSupportingFeeOnTransferTokens(address,bool,uint256,uint256,uint256,address,uint256)\":{\"notice\":\"Remove liquidity of a fee-on-transfer token and WETH (returned as ETH) from a Pool\"},\"sortTokens(address,address)\":{\"notice\":\"Sort two tokens by which address value is less than the other\"},\"swapExactETHForTokens(uint256,(address,address,bool,address)[],address,uint256)\":{\"notice\":\"Swap ETH for a token\"},\"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,(address,address,bool,address)[],address,uint256)\":{\"notice\":\"Swap ETH for a token supporting fee-on-transfer tokens\"},\"swapExactTokensForETH(uint256,uint256,(address,address,bool,address)[],address,uint256)\":{\"notice\":\"Swap a token for WETH (returned as ETH)\"},\"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)\":{\"notice\":\"Swap a token for WETH (returned as ETH) supporting fee-on-transfer tokens\"},\"swapExactTokensForTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)\":{\"notice\":\"Swap one token for another\"},\"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)\":{\"notice\":\"Swap one token for another supporting fee-on-transfer tokens\"},\"voter()\":{\"notice\":\"Address of Voter.sol\"},\"weth()\":{\"notice\":\"Interface of WETH contract used for WETH => ETH wrapping/unwrapping\"},\"zapIn(address,uint256,uint256,(address,address,bool,address,uint256,uint256,uint256,uint256),(address,address,bool,address)[],(address,address,bool,address)[],address,bool)\":{\"notice\":\"Zap a token A into a pool (B, C). (A can be equal to B or C).         Supports standard ERC20 tokens only (i.e. not fee-on-transfer tokens etc).         Slippage is required for the initial swap.         Additional slippage may be required when adding liquidity as the         price of the token may have changed.\"},\"zapOut(address,uint256,(address,address,bool,address,uint256,uint256,uint256,uint256),(address,address,bool,address)[],(address,address,bool,address)[])\":{\"notice\":\"Zap out a pool (B, C) into A.         Supports standard ERC20 tokens only (i.e. not fee-on-transfer tokens etc).         Slippage is required for the removal of liquidity.         Additional slippage may be required on the swap as the         price of the token may have changed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAerodromeRouter.sol\":\"IAerodromeRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@arbitrum/=node_modules/@arbitrum/\",\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@ethereum-waffle/=node_modules/@ethereum-waffle/\",\":@mean-finance/=node_modules/@mean-finance/\",\":@offchainlabs/=node_modules/@offchainlabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@rari-capital/=node_modules/@rari-capital/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=node_modules/fraxlend/lib/ds-test/src/\",\":erc721a/=node_modules/erc721a/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":fraxlend/=node_modules/fraxlend/\",\":fuzzlib/=lib/fuzzlib/src/\",\":hardhat/=node_modules/hardhat/\",\":solidity-code-metrics/=node_modules/solidity-code-metrics/\",\":uniswap-v2/=test/invariant/modules/uniswap-v2/\",\":v2-core/=test/invariant/modules/uniswap-v2/v2-core/contracts/\",\":v2-periphery/=test/invariant/modules/uniswap-v2/v2-periphery/contracts/\",\":v3-core/=test/invariant/modules/v3-core/\",\":v3-periphery/=test/invariant/modules/v3-periphery/\"]},\"sources\":{\"contracts/interfaces/IAerodromeRouter.sol\":{\"keccak256\":\"0xb549dc98ece0673be6e2ef08931178b8d11ed54b1b024df9b73906666c3cdceb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84fbdfbaee0c6c64c1f35b44b941f74197dc483948382410618e7f6d98c5f1b1\",\"dweb:/ipfs/QmXQw3P3zR6N272CGjrxUwWpAhLnYbBjDHMFt4biYFtFV6\"]},\"contracts/interfaces/IWETH.sol\":{\"keccak256\":\"0xfc58cb50221ab2fc6d08d962063fe776fea1b1bfbd6c3184bd64975ddcfad2c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1cba1f8d9b421be1d946353b66d88ca418cdbb07f57e320940a41e2293438965\",\"dweb:/ipfs/Qmc6XcP5SrPByz6vaKoMqLuovyMqdR6zZEfGcRZU5Qzh1S\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"ETHTransferFailed"},{"inputs":[],"type":"error","name":"Expired"},{"inputs":[],"type":"error","name":"InsufficientAmount"},{"inputs":[],"type":"error","name":"InsufficientAmountA"},{"inputs":[],"type":"error","name":"InsufficientAmountADesired"},{"inputs":[],"type":"error","name":"InsufficientAmountAOptimal"},{"inputs":[],"type":"error","name":"InsufficientAmountB"},{"inputs":[],"type":"error","name":"InsufficientAmountBDesired"},{"inputs":[],"type":"error","name":"InsufficientLiquidity"},{"inputs":[],"type":"error","name":"InsufficientOutputAmount"},{"inputs":[],"type":"error","name":"InvalidAmountInForETHDeposit"},{"inputs":[],"type":"error","name":"InvalidPath"},{"inputs":[],"type":"error","name":"InvalidRouteA"},{"inputs":[],"type":"error","name":"InvalidRouteB"},{"inputs":[],"type":"error","name":"InvalidTokenInForETHDeposit"},{"inputs":[],"type":"error","name":"OnlyWETH"},{"inputs":[],"type":"error","name":"PoolDoesNotExist"},{"inputs":[],"type":"error","name":"PoolFactoryDoesNotExist"},{"inputs":[],"type":"error","name":"SameAddresses"},{"inputs":[],"type":"error","name":"ZeroAddress"},{"inputs":[],"stateMutability":"view","type":"function","name":"ETHER","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"struct IAerodromeRouter.Route[]","name":"routes","type":"tuple[]","components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bool","name":"stable","type":"bool"},{"internalType":"address","name":"factory","type":"address"}]},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"UNSAFE_swapExactTokensForTokens","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"bool","name":"stable","type":"bool"},{"internalType":"uint256","name":"amountADesired","type":"uint256"},{"internalType":"uint256","name":"amountBDesired","type":"uint256"},{"internalType":"uint256","name":"amountAMin","type":"uint256"},{"internalType":"uint256","name":"amountBMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"addLiquidity","outputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"},{"internalType":"uint256","name":"liquidity","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"bool","name":"stable","type":"bool"},{"internalType":"uint256","name":"amountTokenDesired","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"stateMutability":"payable","type":"function","name":"addLiquidityETH","outputs":[{"internalType":"uint256","name":"amountToken","type":"uint256"},{"internalType":"uint256","name":"amountETH","type":"uint256"},{"internalType":"uint256","name":"liquidity","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"defaultFactory","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"factoryRegistry","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"bool","name":"stable","type":"bool"},{"internalType":"address","name":"_factory","type":"address"},{"internalType":"uint256","name":"amountInA","type":"uint256"},{"internalType":"uint256","name":"amountInB","type":"uint256"},{"internalType":"struct IAerodromeRouter.Route[]","name":"routesA","type":"tuple[]","components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bool","name":"stable","type":"bool"},{"internalType":"address","name":"factory","type":"address"}]},{"internalType":"struct IAerodromeRouter.Route[]","name":"routesB","type":"tuple[]","components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bool","name":"stable","type":"bool"},{"internalType":"address","name":"factory","type":"address"}]}],"stateMutability":"view","type":"function","name":"generateZapInParams","outputs":[{"internalType":"uint256","name":"amountOutMinA","type":"uint256"},{"internalType":"uint256","name":"amountOutMinB","type":"uint256"},{"internalType":"uint256","name":"amountAMin","type":"uint256"},{"internalType":"uint256","name":"amountBMin","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"bool","name":"stable","type":"bool"},{"internalType":"address","name":"_factory","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"struct IAerodromeRouter.Route[]","name":"routesA","type":"tuple[]","components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bool","name":"stable","type":"bool"},{"internalType":"address","name":"factory","type":"address"}]},{"internalType":"struct IAerodromeRouter.Route[]","name":"routesB","type":"tuple[]","components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bool","name":"stable","type":"bool"},{"internalType":"address","name":"factory","type":"address"}]}],"stateMutability":"view","type":"function","name":"generateZapOutParams","outputs":[{"internalType":"uint256","name":"amountOutMinA","type":"uint256"},{"internalType":"uint256","name":"amountOutMinB","type":"uint256"},{"internalType":"uint256","name":"amountAMin","type":"uint256"},{"internalType":"uint256","name":"amountBMin","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"struct IAerodromeRouter.Route[]","name":"routes","type":"tuple[]","components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bool","name":"stable","type":"bool"},{"internalType":"address","name":"factory","type":"address"}]}],"stateMutability":"view","type":"function","name":"getAmountsOut","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}]},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"bool","name":"stable","type":"bool"},{"internalType":"address","name":"_factory","type":"address"}],"stateMutability":"view","type":"function","name":"getReserves","outputs":[{"internalType":"uint256","name":"reserveA","type":"uint256"},{"internalType":"uint256","name":"reserveB","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"bool","name":"stable","type":"bool"},{"internalType":"address","name":"_factory","type":"address"}],"stateMutability":"view","type":"function","name":"poolFor","outputs":[{"internalType":"address","name":"pool","type":"address"}]},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"bool","name":"stable","type":"bool"},{"internalType":"address","name":"_factory","type":"address"},{"internalType":"uint256","name":"amountADesired","type":"uint256"},{"internalType":"uint256","name":"amountBDesired","type":"uint256"}],"stateMutability":"view","type":"function","name":"quoteAddLiquidity","outputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"},{"internalType":"uint256","name":"liquidity","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"bool","name":"stable","type":"bool"},{"internalType":"address","name":"_factory","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"}],"stateMutability":"view","type":"function","name":"quoteRemoveLiquidity","outputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"address","name":"factory","type":"address"}],"stateMutability":"view","type":"function","name":"quoteStableLiquidityRatio","outputs":[{"internalType":"uint256","name":"ratio","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"bool","name":"stable","type":"bool"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountAMin","type":"uint256"},{"internalType":"uint256","name":"amountBMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"removeLiquidity","outputs":[{"internalType":"uint256","name":"amountA","type":"uint256"},{"internalType":"uint256","name":"amountB","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"bool","name":"stable","type":"bool"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"removeLiquidityETH","outputs":[{"internalType":"uint256","name":"amountToken","type":"uint256"},{"internalType":"uint256","name":"amountETH","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"bool","name":"stable","type":"bool"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"amountTokenMin","type":"uint256"},{"internalType":"uint256","name":"amountETHMin","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"removeLiquidityETHSupportingFeeOnTransferTokens","outputs":[{"internalType":"uint256","name":"amountETH","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"}],"stateMutability":"pure","type":"function","name":"sortTokens","outputs":[{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"}]},{"inputs":[{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"struct IAerodromeRouter.Route[]","name":"routes","type":"tuple[]","components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bool","name":"stable","type":"bool"},{"internalType":"address","name":"factory","type":"address"}]},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"stateMutability":"payable","type":"function","name":"swapExactETHForTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}]},{"inputs":[{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"struct IAerodromeRouter.Route[]","name":"routes","type":"tuple[]","components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bool","name":"stable","type":"bool"},{"internalType":"address","name":"factory","type":"address"}]},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"stateMutability":"payable","type":"function","name":"swapExactETHForTokensSupportingFeeOnTransferTokens"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"struct IAerodromeRouter.Route[]","name":"routes","type":"tuple[]","components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bool","name":"stable","type":"bool"},{"internalType":"address","name":"factory","type":"address"}]},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"swapExactTokensForETH","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}]},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"struct IAerodromeRouter.Route[]","name":"routes","type":"tuple[]","components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bool","name":"stable","type":"bool"},{"internalType":"address","name":"factory","type":"address"}]},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"swapExactTokensForETHSupportingFeeOnTransferTokens"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"struct IAerodromeRouter.Route[]","name":"routes","type":"tuple[]","components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bool","name":"stable","type":"bool"},{"internalType":"address","name":"factory","type":"address"}]},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"swapExactTokensForTokens","outputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}]},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"struct IAerodromeRouter.Route[]","name":"routes","type":"tuple[]","components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bool","name":"stable","type":"bool"},{"internalType":"address","name":"factory","type":"address"}]},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"swapExactTokensForTokensSupportingFeeOnTransferTokens"},{"inputs":[],"stateMutability":"view","type":"function","name":"voter","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"weth","outputs":[{"internalType":"contract IWETH","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"uint256","name":"amountInA","type":"uint256"},{"internalType":"uint256","name":"amountInB","type":"uint256"},{"internalType":"struct IAerodromeRouter.Zap","name":"zapInPool","type":"tuple","components":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"bool","name":"stable","type":"bool"},{"internalType":"address","name":"factory","type":"address"},{"internalType":"uint256","name":"amountOutMinA","type":"uint256"},{"internalType":"uint256","name":"amountOutMinB","type":"uint256"},{"internalType":"uint256","name":"amountAMin","type":"uint256"},{"internalType":"uint256","name":"amountBMin","type":"uint256"}]},{"internalType":"struct IAerodromeRouter.Route[]","name":"routesA","type":"tuple[]","components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bool","name":"stable","type":"bool"},{"internalType":"address","name":"factory","type":"address"}]},{"internalType":"struct IAerodromeRouter.Route[]","name":"routesB","type":"tuple[]","components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bool","name":"stable","type":"bool"},{"internalType":"address","name":"factory","type":"address"}]},{"internalType":"address","name":"to","type":"address"},{"internalType":"bool","name":"stake","type":"bool"}],"stateMutability":"payable","type":"function","name":"zapIn","outputs":[{"internalType":"uint256","name":"liquidity","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"struct IAerodromeRouter.Zap","name":"zapOutPool","type":"tuple","components":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"bool","name":"stable","type":"bool"},{"internalType":"address","name":"factory","type":"address"},{"internalType":"uint256","name":"amountOutMinA","type":"uint256"},{"internalType":"uint256","name":"amountOutMinB","type":"uint256"},{"internalType":"uint256","name":"amountAMin","type":"uint256"},{"internalType":"uint256","name":"amountBMin","type":"uint256"}]},{"internalType":"struct IAerodromeRouter.Route[]","name":"routesA","type":"tuple[]","components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bool","name":"stable","type":"bool"},{"internalType":"address","name":"factory","type":"address"}]},{"internalType":"struct IAerodromeRouter.Route[]","name":"routesB","type":"tuple[]","components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bool","name":"stable","type":"bool"},{"internalType":"address","name":"factory","type":"address"}]}],"stateMutability":"nonpayable","type":"function","name":"zapOut"}],"devdoc":{"kind":"dev","methods":{"ETHER()":{"details":"Represents Ether. Used by zapper to determine whether to return assets as ETH/WETH."},"UNSAFE_swapExactTokensForTokens(uint256[],(address,address,bool,address)[],address,uint256)":{"params":{"deadline":"Deadline to receive tokens","routes":"Array of trade routes used in the swap","to":"Recipient of the tokens received"},"returns":{"_0":"amounts     Array of amounts to swap  per route"}},"addLiquidity(address,address,bool,uint256,uint256,uint256,uint256,address,uint256)":{"params":{"amountADesired":"Amount of tokenA desired to deposit","amountAMin":"Minimum amount of tokenA to deposit","amountBDesired":"Amount of tokenB desired to deposit","amountBMin":"Minimum amount of tokenB to deposit","deadline":"Deadline to receive liquidity","stable":"True if pool is stable, false if volatile","to":"Recipient of liquidity token","tokenA":".","tokenB":"."},"returns":{"amountA":"        Amount of tokenA to actually deposit","amountB":"        Amount of tokenB to actually deposit","liquidity":"      Amount of liquidity token returned from deposit"}},"addLiquidityETH(address,bool,uint256,uint256,uint256,address,uint256)":{"params":{"amountETHMin":"Minimum amount of ETH to deposit","amountTokenDesired":"Amount of token desired to deposit","amountTokenMin":"Minimum amount of token to deposit","deadline":"Deadline to add liquidity","stable":"True if pool is stable, false if volatile","to":"Recipient of liquidity token","token":"."},"returns":{"amountETH":"          Amount of tokenETH to actually deposit","amountToken":"        Amount of token to actually deposit","liquidity":"          Amount of liquidity token returned from deposit"}},"generateZapInParams(address,address,bool,address,uint256,uint256,(address,address,bool,address)[],(address,address,bool,address)[])":{"details":"Output token refers to the token you want to zap in from.","params":{"_factory":".","amountInA":"Amount of input token you wish to send down routesA","amountInB":"Amount of input token you wish to send down routesB","routesA":"Route used to convert input token to tokenA","routesB":"Route used to convert input token to tokenB","stable":".","tokenA":".","tokenB":"."},"returns":{"amountAMin":"     Minimum amount of tokenA expected from depositing liquidity.","amountBMin":"     Minimum amount of tokenB expected from depositing liquidity.","amountOutMinA":"  Minimum output expected from swapping input token to tokenA.","amountOutMinB":"  Minimum output expected from swapping input token to tokenB."}},"generateZapOutParams(address,address,bool,address,uint256,(address,address,bool,address)[],(address,address,bool,address)[])":{"details":"Output token refers to the token you want to zap out of.","params":{"_factory":".","liquidity":"Amount of liquidity being zapped out of into a given output token.","routesA":"Route used to convert tokenA into output token.","routesB":"Route used to convert tokenB into output token.","stable":".","tokenA":".","tokenB":"."},"returns":{"amountAMin":"     Minimum amount of tokenA expected from withdrawing liquidity.","amountBMin":"     Minimum amount of tokenB expected from withdrawing liquidity.","amountOutMinA":"  Minimum output expected from swapping tokenA into output token.","amountOutMinB":"  Minimum output expected from swapping tokenB into output token."}},"getReserves(address,address,bool,address)":{"params":{"_factory":"Address of PoolFactory for tokenA and tokenB","stable":"True if pool is stable, false if volatile","tokenA":".","tokenB":"."},"returns":{"reserveA":"   Amount of reserves of the sorted token A","reserveB":"   Amount of reserves of the sorted token B"}},"poolFor(address,address,bool,address)":{"details":"Returns a randomly generated address for a nonexistent pool","params":{"_factory":"Address of factory which created the pool","stable":"True if pool is stable, false if volatile","tokenA":"Address of token to query","tokenB":"Address of token to query"}},"quoteAddLiquidity(address,address,bool,address,uint256,uint256)":{"params":{"_factory":"Address of PoolFactory for tokenA and tokenB","amountADesired":"Amount of tokenA desired to deposit","amountBDesired":"Amount of tokenB desired to deposit","stable":"True if pool is stable, false if volatile","tokenA":".","tokenB":"."},"returns":{"amountA":"        Amount of tokenA to actually deposit","amountB":"        Amount of tokenB to actually deposit","liquidity":"      Amount of liquidity token returned from deposit"}},"quoteRemoveLiquidity(address,address,bool,address,uint256)":{"params":{"_factory":"Address of PoolFactory for tokenA and tokenB","liquidity":"Amount of liquidity to remove","stable":"True if pool is stable, false if volatile","tokenA":".","tokenB":"."},"returns":{"amountA":"    Amount of tokenA received","amountB":"    Amount of tokenB received"}},"quoteStableLiquidityRatio(address,address,address)":{"details":"Returns stable liquidity ratio of B to (A + B).      E.g. if ratio is 0.4, it means there is more of A than there is of B.      Therefore you should deposit more of token A than B.","params":{"factory":"Factory that created stable pool.","tokenA":"tokenA of stable pool you are zapping into.","tokenB":"tokenB of stable pool you are zapping into."},"returns":{"ratio":"  Ratio of token0 to token1 required to deposit into zap."}},"removeLiquidity(address,address,bool,uint256,uint256,uint256,address,uint256)":{"params":{"amountAMin":"Minimum amount of tokenA to receive","amountBMin":"Minimum amount of tokenB to receive","deadline":"Deadline to remove liquidity","liquidity":"Amount of liquidity to remove","stable":"True if pool is stable, false if volatile","to":"Recipient of tokens received","tokenA":".","tokenB":"."},"returns":{"amountA":"    Amount of tokenA received","amountB":"    Amount of tokenB received"}},"removeLiquidityETH(address,bool,uint256,uint256,uint256,address,uint256)":{"params":{"amountETHMin":"Minimum amount of ETH to receive","amountTokenMin":"Minimum amount of token to receive","deadline":"Deadline to receive liquidity","liquidity":"Amount of liquidity to remove","stable":"True if pool is stable, false if volatile","to":"Recipient of liquidity token","token":"."},"returns":{"amountETH":"      Amount of ETH received","amountToken":"    Amount of token received"}},"removeLiquidityETHSupportingFeeOnTransferTokens(address,bool,uint256,uint256,uint256,address,uint256)":{"params":{"amountETHMin":"Minimum amount of ETH to receive","amountTokenMin":"Minimum amount of token to receive","deadline":"Deadline to receive liquidity","liquidity":"Amount of liquidity to remove","stable":"True if pool is stable, false if volatile","to":"Recipient of liquidity token","token":"."},"returns":{"amountETH":"      Amount of ETH received"}},"sortTokens(address,address)":{"params":{"tokenA":"Address of token to sort","tokenB":"Address of token to sort"},"returns":{"token0":" Lower address value between tokenA and tokenB","token1":" Higher address value between tokenA and tokenB"}},"swapExactETHForTokens(uint256,(address,address,bool,address)[],address,uint256)":{"params":{"amountOutMin":"Minimum amount of desired token received","deadline":"Deadline to receive tokens","routes":"Array of trade routes used in the swap","to":"Recipient of the tokens received"},"returns":{"amounts":"    Array of amounts returned per route"}},"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,(address,address,bool,address)[],address,uint256)":{"params":{"amountOutMin":"Minimum amount of desired token received","deadline":"Deadline to receive tokens","routes":"Array of trade routes used in the swap","to":"Recipient of the tokens received"}},"swapExactTokensForETH(uint256,uint256,(address,address,bool,address)[],address,uint256)":{"params":{"amountIn":"Amount of token in","amountOutMin":"Minimum amount of desired ETH","deadline":"Deadline to receive tokens","routes":"Array of trade routes used in the swap","to":"Recipient of the tokens received"},"returns":{"amounts":"    Array of amounts returned per route"}},"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)":{"params":{"amountIn":"Amount of token in","amountOutMin":"Minimum amount of desired ETH","deadline":"Deadline to receive tokens","routes":"Array of trade routes used in the swap","to":"Recipient of the tokens received"}},"swapExactTokensForTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)":{"params":{"amountIn":"Amount of token in","amountOutMin":"Minimum amount of desired token received","deadline":"Deadline to receive tokens","routes":"Array of trade routes used in the swap","to":"Recipient of the tokens received"},"returns":{"amounts":"    Array of amounts returned per route"}},"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)":{"params":{"amountIn":"Amount of token in","amountOutMin":"Minimum amount of desired token received","deadline":"Deadline to receive tokens","routes":"Array of trade routes used in the swap","to":"Recipient of the tokens received"}},"zapIn(address,uint256,uint256,(address,address,bool,address,uint256,uint256,uint256,uint256),(address,address,bool,address)[],(address,address,bool,address)[],address,bool)":{"params":{"amountInA":"Amount of input token you wish to send down routesA","amountInB":"Amount of input token you wish to send down routesB","routesA":"Route used to convert input token to tokenA","routesB":"Route used to convert input token to tokenB","stake":"Auto-stake liquidity in corresponding gauge.","to":"Address you wish to mint liquidity to.","tokenIn":"Token you are zapping in from (i.e. input token).","zapInPool":"Contains zap struct information. See Zap struct."},"returns":{"liquidity":"  Amount of LP tokens created from zapping in."}},"zapOut(address,uint256,(address,address,bool,address,uint256,uint256,uint256,uint256),(address,address,bool,address)[],(address,address,bool,address)[])":{"params":{"liquidity":"Amount of liquidity you wish to remove.","routesA":"Route used to convert tokenA into output token.","routesB":"Route used to convert tokenB into output token.","tokenOut":"Token you are zapping out to (i.e. output token).","zapOutPool":"Contains zap struct information. See Zap struct."}}},"version":1},"userdoc":{"kind":"user","methods":{"UNSAFE_swapExactTokensForTokens(uint256[],(address,address,bool,address)[],address,uint256)":{"notice":"Swap one token for another without slippage protection"},"addLiquidity(address,address,bool,uint256,uint256,uint256,uint256,address,uint256)":{"notice":"Add liquidity of two tokens to a Pool"},"addLiquidityETH(address,bool,uint256,uint256,uint256,address,uint256)":{"notice":"Add liquidity of a token and WETH (transferred as ETH) to a Pool"},"defaultFactory()":{"notice":"Address of Protocol PoolFactory.sol"},"factoryRegistry()":{"notice":"Address of FactoryRegistry.sol"},"generateZapInParams(address,address,bool,address,uint256,uint256,(address,address,bool,address)[],(address,address,bool,address)[])":{"notice":"Used to generate params required for zapping in.         Zap in => remove liquidity then swap.         Apply slippage to expected swap values to account for changes in reserves in between."},"generateZapOutParams(address,address,bool,address,uint256,(address,address,bool,address)[],(address,address,bool,address)[])":{"notice":"Used to generate params required for zapping out.         Zap out => swap then add liquidity.         Apply slippage to expected liquidity values to account for changes in reserves in between."},"getAmountsOut(uint256,(address,address,bool,address)[])":{"notice":"Perform chained getAmountOut calculations on any number of pools"},"getReserves(address,address,bool,address)":{"notice":"Fetch and sort the reserves for a pool"},"poolFor(address,address,bool,address)":{"notice":"Calculate the address of a pool by its' factory.         Used by all Router functions containing a `Route[]` or `_factory` argument.         Reverts if _factory is not approved by the FactoryRegistry"},"quoteAddLiquidity(address,address,bool,address,uint256,uint256)":{"notice":"Quote the amount deposited into a Pool"},"quoteRemoveLiquidity(address,address,bool,address,uint256)":{"notice":"Quote the amount of liquidity removed from a Pool"},"quoteStableLiquidityRatio(address,address,address)":{"notice":"Used by zapper to determine appropriate ratio of A to B to deposit liquidity. Assumes stable pool."},"removeLiquidity(address,address,bool,uint256,uint256,uint256,address,uint256)":{"notice":"Remove liquidity of two tokens from a Pool"},"removeLiquidityETH(address,bool,uint256,uint256,uint256,address,uint256)":{"notice":"Remove liquidity of a token and WETH (returned as ETH) from a Pool"},"removeLiquidityETHSupportingFeeOnTransferTokens(address,bool,uint256,uint256,uint256,address,uint256)":{"notice":"Remove liquidity of a fee-on-transfer token and WETH (returned as ETH) from a Pool"},"sortTokens(address,address)":{"notice":"Sort two tokens by which address value is less than the other"},"swapExactETHForTokens(uint256,(address,address,bool,address)[],address,uint256)":{"notice":"Swap ETH for a token"},"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,(address,address,bool,address)[],address,uint256)":{"notice":"Swap ETH for a token supporting fee-on-transfer tokens"},"swapExactTokensForETH(uint256,uint256,(address,address,bool,address)[],address,uint256)":{"notice":"Swap a token for WETH (returned as ETH)"},"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)":{"notice":"Swap a token for WETH (returned as ETH) supporting fee-on-transfer tokens"},"swapExactTokensForTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)":{"notice":"Swap one token for another"},"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,(address,address,bool,address)[],address,uint256)":{"notice":"Swap one token for another supporting fee-on-transfer tokens"},"voter()":{"notice":"Address of Voter.sol"},"weth()":{"notice":"Interface of WETH contract used for WETH => ETH wrapping/unwrapping"},"zapIn(address,uint256,uint256,(address,address,bool,address,uint256,uint256,uint256,uint256),(address,address,bool,address)[],(address,address,bool,address)[],address,bool)":{"notice":"Zap a token A into a pool (B, C). (A can be equal to B or C).         Supports standard ERC20 tokens only (i.e. not fee-on-transfer tokens etc).         Slippage is required for the initial swap.         Additional slippage may be required when adding liquidity as the         price of the token may have changed."},"zapOut(address,uint256,(address,address,bool,address,uint256,uint256,uint256,uint256),(address,address,bool,address)[],(address,address,bool,address)[])":{"notice":"Zap out a pool (B, C) into A.         Supports standard ERC20 tokens only (i.e. not fee-on-transfer tokens etc).         Slippage is required for the removal of liquidity.         Additional slippage may be required on the swap as the         price of the token may have changed."}},"version":1}},"settings":{"remappings":["@arbitrum/=node_modules/@arbitrum/","@chainlink/=node_modules/@chainlink/","@eth-optimism/=node_modules/@eth-optimism/","@ethereum-waffle/=node_modules/@ethereum-waffle/","@mean-finance/=node_modules/@mean-finance/","@offchainlabs/=node_modules/@offchainlabs/","@openzeppelin/=node_modules/@openzeppelin/","@rari-capital/=node_modules/@rari-capital/","@scroll-tech/=node_modules/@scroll-tech/","@uniswap/=node_modules/@uniswap/","base64-sol/=node_modules/base64-sol/","ds-test/=node_modules/fraxlend/lib/ds-test/src/","erc721a/=node_modules/erc721a/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","fraxlend/=node_modules/fraxlend/","fuzzlib/=lib/fuzzlib/src/","hardhat/=node_modules/hardhat/","solidity-code-metrics/=node_modules/solidity-code-metrics/","uniswap-v2/=test/invariant/modules/uniswap-v2/","v2-core/=test/invariant/modules/uniswap-v2/v2-core/contracts/","v2-periphery/=test/invariant/modules/uniswap-v2/v2-periphery/contracts/","v3-core/=test/invariant/modules/v3-core/","v3-periphery/=test/invariant/modules/v3-periphery/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/interfaces/IAerodromeRouter.sol":"IAerodromeRouter"},"evmVersion":"paris","libraries":{}},"sources":{"contracts/interfaces/IAerodromeRouter.sol":{"keccak256":"0xb549dc98ece0673be6e2ef08931178b8d11ed54b1b024df9b73906666c3cdceb","urls":["bzz-raw://84fbdfbaee0c6c64c1f35b44b941f74197dc483948382410618e7f6d98c5f1b1","dweb:/ipfs/QmXQw3P3zR6N272CGjrxUwWpAhLnYbBjDHMFt4biYFtFV6"],"license":"MIT"},"contracts/interfaces/IWETH.sol":{"keccak256":"0xfc58cb50221ab2fc6d08d962063fe776fea1b1bfbd6c3184bd64975ddcfad2c8","urls":["bzz-raw://1cba1f8d9b421be1d946353b66d88ca418cdbb07f57e320940a41e2293438965","dweb:/ipfs/Qmc6XcP5SrPByz6vaKoMqLuovyMqdR6zZEfGcRZU5Qzh1S"],"license":"MIT"}},"version":1},"id":28}