{"abi":[{"type":"function","name":"acceptTransferTimelock","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"pendingTimelockAddress","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"renounceTimelock","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"timelockAddress","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"transferTimelock","inputs":[{"name":"_newTimelock","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"TimelockTransferStarted","inputs":[{"name":"previousTimelock","type":"address","indexed":true,"internalType":"address"},{"name":"newTimelock","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"TimelockTransferred","inputs":[{"name":"previousTimelock","type":"address","indexed":true,"internalType":"address"},{"name":"newTimelock","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"error","name":"OnlyPendingTimelock","inputs":[]},{"type":"error","name":"OnlyTimelock","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"acceptTransferTimelock()":"f6ccaad4","pendingTimelockAddress()":"090f3f50","renounceTimelock()":"4f8b4ae7","timelockAddress()":"4bc66f32","transferTimelock(address)":"45014095"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlyPendingTimelock\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyTimelock\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousTimelock\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newTimelock\",\"type\":\"address\"}],\"name\":\"TimelockTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousTimelock\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newTimelock\",\"type\":\"address\"}],\"name\":\"TimelockTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptTransferTimelock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingTimelockAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceTimelock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timelockAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newTimelock\",\"type\":\"address\"}],\"name\":\"transferTimelock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Drake Evans (Frax Finance) https://github.com/drakeevans\",\"details\":\"Inspired by the OpenZeppelin's Ownable2Step contract\",\"events\":{\"TimelockTransferStarted(address,address)\":{\"params\":{\"newTimelock\":\"The address of the new timelock\",\"previousTimelock\":\"The address of the previous timelock\"}},\"TimelockTransferred(address,address)\":{\"params\":{\"newTimelock\":\"The address of the new timelock\",\"previousTimelock\":\"The address of the previous timelock\"}}},\"kind\":\"dev\",\"methods\":{\"acceptTransferTimelock()\":{\"details\":\"Must be called by the pending timelock\"},\"renounceTimelock()\":{\"details\":\"Pending timelock must be set to current timelock before renouncing, creating a 2-step renounce process\"},\"transferTimelock(address)\":{\"details\":\"Must be called by the current timelock\",\"params\":{\"_newTimelock\":\"The address of the nominated (pending) timelock\"}}},\"title\":\"Timelock2Step\",\"version\":1},\"userdoc\":{\"errors\":{\"OnlyPendingTimelock()\":[{\"notice\":\"Emitted when pending timelock is transferred\"}],\"OnlyTimelock()\":[{\"notice\":\"Emitted when timelock is transferred\"}]},\"events\":{\"TimelockTransferStarted(address,address)\":{\"notice\":\"The ```TimelockTransferStarted``` event is emitted when the timelock transfer is initiated\"},\"TimelockTransferred(address,address)\":{\"notice\":\"The ```TimelockTransferred``` event is emitted when the timelock transfer is completed\"}},\"kind\":\"user\",\"methods\":{\"acceptTransferTimelock()\":{\"notice\":\"The ```acceptTransferTimelock``` function completes the timelock transfer\"},\"pendingTimelockAddress()\":{\"notice\":\"The pending timelock address\"},\"renounceTimelock()\":{\"notice\":\"The ```renounceTimelock``` function renounces the timelock after setting pending timelock to current timelock\"},\"timelockAddress()\":{\"notice\":\"The current timelock address\"},\"transferTimelock(address)\":{\"notice\":\"The ```transferTimelock``` function initiates the timelock transfer\"}},\"notice\":\"An abstract contract which contains 2-step transfer and renounce logic for a timelock address\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/invariant/modules/fraxlend/Timelock2Step.sol\":\"Timelock2Step\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@arbitrum/=node_modules/@arbitrum/\",\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@ethereum-waffle/=node_modules/@ethereum-waffle/\",\":@mean-finance/=node_modules/@mean-finance/\",\":@offchainlabs/=node_modules/@offchainlabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@rari-capital/=node_modules/@rari-capital/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=node_modules/fraxlend/lib/ds-test/src/\",\":erc721a/=node_modules/erc721a/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":fraxlend/=node_modules/fraxlend/\",\":fuzzlib/=lib/fuzzlib/src/\",\":hardhat/=node_modules/hardhat/\",\":solidity-bytes-utils/contracts/=test/invariant/modules/fraxlend/libraries/\",\":solidity-code-metrics/=node_modules/solidity-code-metrics/\",\":uniswap-v2/=test/invariant/modules/uniswap-v2/\",\":v2-core/=test/invariant/modules/uniswap-v2/v2-core/contracts/\",\":v2-periphery/=test/invariant/modules/uniswap-v2/v2-periphery/contracts/\",\":v3-core/=test/invariant/modules/v3-core/\",\":v3-periphery/=test/invariant/modules/v3-periphery/\"]},\"sources\":{\"test/invariant/modules/fraxlend/Timelock2Step.sol\":{\"keccak256\":\"0xa3508874517e345a350d751e880754d9fca1ce19a7369b143b47fbb40208ea37\",\"license\":\"ISC\",\"urls\":[\"bzz-raw://fceefd84fb15cf628e8ad0d9f06aa5a27fb079eca0d9c317d1994a2e65cc0f64\",\"dweb:/ipfs/QmdLv7tEWmnWeKaTfrdectqttULizEtgQmZe4eN1QW3ck6\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"OnlyPendingTimelock"},{"inputs":[],"type":"error","name":"OnlyTimelock"},{"inputs":[{"internalType":"address","name":"previousTimelock","type":"address","indexed":true},{"internalType":"address","name":"newTimelock","type":"address","indexed":true}],"type":"event","name":"TimelockTransferStarted","anonymous":false},{"inputs":[{"internalType":"address","name":"previousTimelock","type":"address","indexed":true},{"internalType":"address","name":"newTimelock","type":"address","indexed":true}],"type":"event","name":"TimelockTransferred","anonymous":false},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"acceptTransferTimelock"},{"inputs":[],"stateMutability":"view","type":"function","name":"pendingTimelockAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"renounceTimelock"},{"inputs":[],"stateMutability":"view","type":"function","name":"timelockAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"_newTimelock","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"transferTimelock"}],"devdoc":{"kind":"dev","methods":{"acceptTransferTimelock()":{"details":"Must be called by the pending timelock"},"renounceTimelock()":{"details":"Pending timelock must be set to current timelock before renouncing, creating a 2-step renounce process"},"transferTimelock(address)":{"details":"Must be called by the current timelock","params":{"_newTimelock":"The address of the nominated (pending) timelock"}}},"version":1},"userdoc":{"kind":"user","methods":{"acceptTransferTimelock()":{"notice":"The ```acceptTransferTimelock``` function completes the timelock transfer"},"pendingTimelockAddress()":{"notice":"The pending timelock address"},"renounceTimelock()":{"notice":"The ```renounceTimelock``` function renounces the timelock after setting pending timelock to current timelock"},"timelockAddress()":{"notice":"The current timelock address"},"transferTimelock(address)":{"notice":"The ```transferTimelock``` function initiates the timelock transfer"}},"version":1}},"settings":{"remappings":["@arbitrum/=node_modules/@arbitrum/","@chainlink/=node_modules/@chainlink/","@eth-optimism/=node_modules/@eth-optimism/","@ethereum-waffle/=node_modules/@ethereum-waffle/","@mean-finance/=node_modules/@mean-finance/","@offchainlabs/=node_modules/@offchainlabs/","@openzeppelin/=node_modules/@openzeppelin/","@rari-capital/=node_modules/@rari-capital/","@scroll-tech/=node_modules/@scroll-tech/","@uniswap/=node_modules/@uniswap/","base64-sol/=node_modules/base64-sol/","ds-test/=node_modules/fraxlend/lib/ds-test/src/","erc721a/=node_modules/erc721a/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","fraxlend/=node_modules/fraxlend/","fuzzlib/=lib/fuzzlib/src/","hardhat/=node_modules/hardhat/","solidity-bytes-utils/contracts/=test/invariant/modules/fraxlend/libraries/","solidity-code-metrics/=node_modules/solidity-code-metrics/","uniswap-v2/=test/invariant/modules/uniswap-v2/","v2-core/=test/invariant/modules/uniswap-v2/v2-core/contracts/","v2-periphery/=test/invariant/modules/uniswap-v2/v2-periphery/contracts/","v3-core/=test/invariant/modules/v3-core/","v3-periphery/=test/invariant/modules/v3-periphery/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"test/invariant/modules/fraxlend/Timelock2Step.sol":"Timelock2Step"},"evmVersion":"paris","libraries":{}},"sources":{"test/invariant/modules/fraxlend/Timelock2Step.sol":{"keccak256":"0xa3508874517e345a350d751e880754d9fca1ce19a7369b143b47fbb40208ea37","urls":["bzz-raw://fceefd84fb15cf628e8ad0d9f06aa5a27fb079eca0d9c317d1994a2e65cc0f64","dweb:/ipfs/QmdLv7tEWmnWeKaTfrdectqttULizEtgQmZe4eN1QW3ck6"],"license":"ISC"}},"version":1},"id":136}