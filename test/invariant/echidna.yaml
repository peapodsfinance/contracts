# TODO
#select the mode to test, which can be property, assertion, overflow, exploration, optimization
testMode: "assertion"
#check if some contract was destructed or not
testDestruction: false
#psender is the sender for property transactions; by default intentionally
#the same as contract deployer
psender: "0x10000"
#prefix is the prefix for Boolean functions that are properties to be checked
prefix: "echidna_"
#propMaxGas defines gas cost at which a property fails
propMaxGas: 8000030
#testMaxGas is a gas limit; does not cause failure, but terminates sequence
testMaxGas: 8000030
#maxGasprice is the maximum gas price
maxGasprice: 0
#testLimit is the number of test sequences to run
testLimit: 100000
#stopOnFail makes echidna terminate as soon as any property fails and has been shrunk
stopOnFail: false
#estimateGas makes echidna perform analysis of maximum gas costs for functions (experimental)
estimateGas: false
#seqLen defines how many transactions are in a test sequence
seqLen: 100
#shrinkLimit determines how much effort is spent shrinking failing sequences
shrinkLimit: 5000
#coverage controls coverage guided testing
coverage: true
#format can be "text" or "json" for different output (human or machine readable)
# format: "text"
#contractAddr is the address of the contract itself
contractAddr: "0x00a329c0648769a73afac7f9381e08fb43dbea72"
#deployer is address of the contract deployer (who often is privileged owner, etc.)
deployer: "0x30000"
#sender is set of addresses transactions may originate from
sender: ["0x10000", "0x20000", "0x30000"]
#balanceAddr is default balance for addresses
balanceAddr: 0xffffffff
#balanceContract overrides balanceAddr for the contract address
balanceContract: 0
#codeSize max code size for deployed contratcs (default 0xffffffff)
codeSize: 0xffffffff
#solcArgs allows special args to solc
solcArgs: ""
#solcLibs is solc libraries
solcLibs: []
#cryticArgs allows special args to crytic
cryticArgs: []
#quiet produces (much) less verbose output
# quiet: false
#initialize the blockchain with some data
# initialize: null
#initialize the blockchain with some predeployed contracts in some addresses
# deployContracts: [["0x6B175474E89094C44Da98b954EedeAC495271d0F", "MockERC20"]]
#initialize the blockchain with some bytecode in some addresses
deployBytecodes: [["0x6B175474E89094C44Da98b954EedeAC495271d0F", "608060405234801561001057600080fd5b50611018806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806340c10f19116100975780639dc29fac116100665780639dc29fac146101f6578063a9059cbb14610209578063d505accf1461021c578063dd62ed3e1461022f57600080fd5b806340c10f191461019257806370a08231146101a55780637ecebe00146101ce57806395d89b41146101ee57600080fd5b806318160ddd116100d357806318160ddd1461015057806323b872dd14610162578063313ce567146101755780633644e5151461018a57600080fd5b806306fdde03146100fa578063095ea7b3146101185780631624f6c61461013b575b600080fd5b610102610268565b60405161010f9190610afe565b60405180910390f35b61012b610126366004610b68565b6102fa565b604051901515815260200161010f565b61014e610149366004610c46565b610367565b005b6003545b60405190815260200161010f565b61012b610170366004610cba565b610406565b60025460405160ff909116815260200161010f565b610154610509565b61014e6101a0366004610b68565b61052f565b6101546101b3366004610cf6565b6001600160a01b031660009081526004602052604090205490565b6101546101dc366004610cf6565b60086020526000908152604090205481565b61010261058b565b61014e610204366004610b68565b61059a565b61012b610217366004610b68565b6105a4565b61014e61022a366004610d11565b610629565b61015461023d366004610d7b565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205490565b60606000805461027790610dae565b80601f01602080910402602001604051908101604052809291908181526020018280546102a390610dae565b80156102f05780601f106102c5576101008083540402835291602001916102f0565b820191906000526020600020905b8154815290600101906020018083116102d357829003601f168201915b5050505050905090565b3360008181526005602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103559086815260200190565b60405180910390a35060015b92915050565b60095460ff16156103b55760405162461bcd60e51b81526020600482015260136024820152721053149150511657d253925512505312569151606a1b60448201526064015b60405180910390fd5b60006103c18482610e37565b5060016103ce8382610e37565b506002805460ff191660ff83161790556103e6610887565b6006556103f16108a0565b60075550506009805460ff1916600117905550565b6001600160a01b038316600090815260056020908152604080832033845290915281205460001981146104625761043d8184610943565b6001600160a01b03861660009081526005602090815260408083203384529091529020555b6001600160a01b0385166000908152600460205260409020546104859084610943565b6001600160a01b0380871660009081526004602052604080822093909355908616815220546104b490846109a6565b6001600160a01b038086166000818152600460205260409081902093909355915190871690600080516020610fc3833981519152906104f69087815260200190565b60405180910390a3506001949350505050565b6000600654610516610887565b14610528576105236108a0565b905090565b5060075490565b7f51a7f65c6325882f237d4aeb43228179cfad48b868511d508e24b4437a819137604051610575906020808252600490820152634845524560e01b604082015260600190565b60405180910390a16105878282610a05565b5050565b60606001805461027790610dae565b6105878282610a82565b336000908152600460205260408120546105be9083610943565b33600090815260046020526040808220929092556001600160a01b038516815220546105ea90836109a6565b6001600160a01b038416600081815260046020526040908190209290925590513390600080516020610fc3833981519152906103559086815260200190565b428410156106795760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064016103ac565b60006001610685610509565b6001600160a01b038a16600090815260086020526040812080547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9928d928d928d929091906106d383610f0d565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810188905260e0016040516020818303038152906040528051906020012060405160200161074c92919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa1580156107aa573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906107e05750876001600160a01b0316816001600160a01b0316145b61081d5760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b60448201526064016103ac565b6001600160a01b0381811660009081526005602090815260408083208b8516808552908352928190208a90555189815291928b16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a35050505050505050565b6000610afa8061089963ffffffff8216565b9250505090565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516108d29190610f26565b60405180910390207fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6610903610887565b604080516020810195909552840192909252606083015260808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6000818310156109955760405162461bcd60e51b815260206004820152601c60248201527f45524332303a207375627472616374696f6e20756e646572666c6f770000000060448201526064016103ac565b61099f8284610f9c565b9392505050565b6000806109b38385610faf565b90508381101561099f5760405162461bcd60e51b815260206004820152601860248201527f45524332303a206164646974696f6e206f766572666c6f77000000000000000060448201526064016103ac565b610a11600354826109a6565b6003556001600160a01b038216600090815260046020526040902054610a3790826109a6565b6001600160a01b038316600081815260046020526040808220939093559151909190600080516020610fc383398151915290610a769085815260200190565b60405180910390a35050565b6001600160a01b038216600090815260046020526040902054610aa59082610943565b6001600160a01b038316600090815260046020526040902055600354610acb9082610943565b6003556040518181526000906001600160a01b03841690600080516020610fc383398151915290602001610a76565b4690565b600060208083528351808285015260005b81811015610b2b57858101830151858201604001528201610b0f565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610b6357600080fd5b919050565b60008060408385031215610b7b57600080fd5b610b8483610b4c565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610bb957600080fd5b813567ffffffffffffffff80821115610bd457610bd4610b92565b604051601f8301601f19908116603f01168101908282118183101715610bfc57610bfc610b92565b81604052838152866020858801011115610c1557600080fd5b836020870160208301376000602085830101528094505050505092915050565b803560ff81168114610b6357600080fd5b600080600060608486031215610c5b57600080fd5b833567ffffffffffffffff80821115610c7357600080fd5b610c7f87838801610ba8565b94506020860135915080821115610c9557600080fd5b50610ca286828701610ba8565b925050610cb160408501610c35565b90509250925092565b600080600060608486031215610ccf57600080fd5b610cd884610b4c565b9250610ce660208501610b4c565b9150604084013590509250925092565b600060208284031215610d0857600080fd5b61099f82610b4c565b600080600080600080600060e0888a031215610d2c57600080fd5b610d3588610b4c565b9650610d4360208901610b4c565b95506040880135945060608801359350610d5f60808901610c35565b925060a0880135915060c0880135905092959891949750929550565b60008060408385031215610d8e57600080fd5b610d9783610b4c565b9150610da560208401610b4c565b90509250929050565b600181811c90821680610dc257607f821691505b602082108103610de257634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610e3257600081815260208120601f850160051c81016020861015610e0f5750805b601f850160051c820191505b81811015610e2e57828155600101610e1b565b5050505b505050565b815167ffffffffffffffff811115610e5157610e51610b92565b610e6581610e5f8454610dae565b84610de8565b602080601f831160018114610e9a5760008415610e825750858301515b600019600386901b1c1916600185901b178555610e2e565b600085815260208120601f198616915b82811015610ec957888601518255948401946001909101908401610eaa565b5085821015610ee75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600060018201610f1f57610f1f610ef7565b5060010190565b6000808354610f3481610dae565b60018281168015610f4c5760018114610f6157610f90565b60ff1984168752821515830287019450610f90565b8760005260208060002060005b85811015610f875781548a820152908401908201610f6e565b50505082870194505b50929695505050505050565b8181038181111561036157610361610ef7565b8082018082111561036157610361610ef756feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212205f5fd058d2f65622421f01939fefb8ce3aa54c4eb8e4a29ca23b22e33227c31c64736f6c63430008130033"]]
#whether ot not to fuzz all contracts
allContracts: false
#timeout controls test timeout settings
# timeout: null
#seed not defined by default, is the random seed
#seed: 0
#dictFreq controls how often to use echidna's internal dictionary vs random
#values
dictFreq: 0.40
maxTimeDelay: 604800
#maximum time between generated txs; default is one week
maxBlockDelay: 60480
#maximum number of blocks elapsed between generated txs; default is expected increment in one week
# timeout:
#campaign timeout (in seconds)
# list of methods to filter
# filterFunctions: []
# by default, blacklist methods in filterFunctions
# filterBlacklist: true
# enable or disable ffi HEVM cheatcode
# allowFFI: false
#directory to save the corpus; by default is disabled
corpusDir: echidna
# list of file formats to save coverage reports in; default is all possible formats
coverageFormats: ["txt","html","lcov"]
# constants for corpus mutations (for experimentation only)
# mutConsts: [1, 1, 1, 1]
# maximum value to send to payable functions
# maxValue: 100000000000000000000 # 100 eth
# URL to fetch contracts over RPC
# rpcUrl: null
# block number to use when fetching over RPC
# rpcBlock: null
# Etherscan API key
# etherscanApiKey: null
# number of workers. By default (unset) its value is the clamp of the number cores between 1 and 4
# workers: null
# events server port
# server: null
# whether to add an additional symbolic execution worker
# symExec: false
# whether symbolic execution will be concolic (vs full symbolic execution)
# only relevant if symExec is true
# symExecConcolic: true
# number of SMT solvers used in symbolic execution
# only relevant if symExec is true
# symExecNSolvers: 1
# timeout for symbolic execution SMT solver queries
# only relevant if symExec is true
# symExecTimeout: 30
# Number of times we may revisit a particular branching point
# only relevant if symExec is true and symExecConcolic is false
# symExecMaxIters: 10
# Number of times we may revisit a particular branching point before we consult the smt solver to check reachability
# only relevant if symExec is true and symExecConcolic is false
# symExecAskSMTIters: 1
# List of whitelisted functions for using symbolic/concolic exploration
# only relevant if symExec is true
# symExecTargets: null